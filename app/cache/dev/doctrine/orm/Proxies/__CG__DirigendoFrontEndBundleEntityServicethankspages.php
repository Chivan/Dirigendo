<?php

namespace Proxies\__CG__\Dirigendo\FrontEndBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Servicethankspages extends \Dirigendo\FrontEndBundle\Entity\Servicethankspages implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setKeywords($keywords)
    {
        $this->__load();
        return parent::setKeywords($keywords);
    }

    public function getKeywords()
    {
        $this->__load();
        return parent::getKeywords();
    }

    public function setAdwordscc($adwordscc)
    {
        $this->__load();
        return parent::setAdwordscc($adwordscc);
    }

    public function getAdwordscc()
    {
        $this->__load();
        return parent::getAdwordscc();
    }

    public function setAnalyticscc($analyticscc)
    {
        $this->__load();
        return parent::setAnalyticscc($analyticscc);
    }

    public function getAnalyticscc()
    {
        $this->__load();
        return parent::getAnalyticscc();
    }

    public function setHeaderimage($headerimage)
    {
        $this->__load();
        return parent::setHeaderimage($headerimage);
    }

    public function getHeaderimage()
    {
        $this->__load();
        return parent::getHeaderimage();
    }

    public function setTagline($tagline)
    {
        $this->__load();
        return parent::setTagline($tagline);
    }

    public function getTagline()
    {
        $this->__load();
        return parent::getTagline();
    }

    public function setTaglinetextsize($taglinetextsize)
    {
        $this->__load();
        return parent::setTaglinetextsize($taglinetextsize);
    }

    public function getTaglinetextsize()
    {
        $this->__load();
        return parent::getTaglinetextsize();
    }

    public function setContentbox1($contentbox1)
    {
        $this->__load();
        return parent::setContentbox1($contentbox1);
    }

    public function getContentbox1()
    {
        $this->__load();
        return parent::getContentbox1();
    }

    public function setContentbox2($contentbox2)
    {
        $this->__load();
        return parent::setContentbox2($contentbox2);
    }

    public function getContentbox2()
    {
        $this->__load();
        return parent::getContentbox2();
    }

    public function setTimestamp($timestamp)
    {
        $this->__load();
        return parent::setTimestamp($timestamp);
    }

    public function getTimestamp()
    {
        $this->__load();
        return parent::getTimestamp();
    }

    public function setServiceid(\Dirigendo\FrontEndBundle\Entity\Services $serviceid = NULL)
    {
        $this->__load();
        return parent::setServiceid($serviceid);
    }

    public function getServiceid()
    {
        $this->__load();
        return parent::getServiceid();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'title', 'description', 'keywords', 'adwordscc', 'analyticscc', 'headerimage', 'tagline', 'taglinetextsize', 'contentbox1', 'contentbox2', 'timestamp', 'serviceid');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}